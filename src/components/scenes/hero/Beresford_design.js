/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useTexture, OrbitControls } from '@react-three/drei';
import { useThree } from '@react-three/fiber';
import model from './beresford_design.glb';

export default function Model({ data, ...props }) {
  useEffect(() => {
    console.log(data);
  });

  const group = useRef();
  const controls = useRef();

  const myCamera = useThree((state) => {
    return state.camera;
  });

  const bakedTex2 = useTexture(data.bake2.childImageSharp.fixed.src);
  const bakedTex3 = useTexture(data.bake3.childImageSharp.fixed.src);
  const bakedTex4 = useTexture(data.bake4.childImageSharp.fixed.src);
  const bakedTex5 = useTexture(data.bake5.childImageSharp.fixed.src);
  const bakedTex6 = useTexture(data.bake6.childImageSharp.fixed.src);
  const bakedTex7 = useTexture(data.bake7.childImageSharp.fixed.src);
  const bakedTex8 = useTexture(data.bake8.childImageSharp.fixed.src);

  bakedTex2.flipY = false;
  bakedTex3.flipY = false;
  bakedTex4.flipY = false;
  bakedTex5.flipY = false;
  bakedTex6.flipY = false;
  bakedTex7.flipY = false;
  bakedTex8.flipY = false;

  const { nodes } = useGLTF(model);
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.mac_pro_emissive.geometry}
        position={[0.86955, 0.30488, -0.54437]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.phone_emissive.geometry}
        position={[0.01893, 0.78195, -0.80597]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.monitor_emissive.geometry}
        position={[0.34019, 1.12988, -0.91913]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.ipad_emissive001.geometry}
        position={[-1.33327, 1.38233, -0.77324]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.ipad_emissive002.geometry}
        position={[-0.90973, 0.98622, -0.77324]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.ipad_emissive.geometry}
        position={[-1.33327, 0.6179, -0.77324]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.email_emissive.geometry}
        position={[-1.43596, 1.74085, -0.82356]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.insta_emissive.geometry}
        position={[-1.43596, 1.74085, -0.82356]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.linkedin_emissive.geometry}
        position={[-1.43596, 1.74085, -0.82356]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.table_emissive.geometry}
        position={[1.19391, 0.46596, -0.72178]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.shelving_emissive.geometry}
        position={[-1.1789, 0.51015, -0.87188]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.lamp_emissive_orange.geometry}
        position={[1.62294, 1.49388, -0.73567]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.lamp_emissive_purple.geometry}
        position={[1.62294, 1.49388, -0.73567]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.lamp_emissive_pink.geometry}
        position={[1.62294, 1.49388, -0.73567]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.github_emissive.geometry}
        position={[-1.43596, 1.74085, -0.82356]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
      <mesh
        geometry={nodes.bake2.geometry}
        position={[0.99771, 0.87454, -1.053]}
      >
        <meshBasicMaterial map={bakedTex2} />
      </mesh>
      <mesh
        geometry={nodes.bake3.geometry}
        position={[0.86468, 0.35838, -0.66076]}
      >
        <meshBasicMaterial map={bakedTex3} />
      </mesh>
      <mesh
        geometry={nodes.bake4.geometry}
        position={[1.19391, 0.46596, -0.72178]}
      >
        <meshBasicMaterial map={bakedTex4} />
      </mesh>
      <mesh
        geometry={nodes.bake5.geometry}
        position={[-0.79024, -0.91263, -0.7532]}
      >
        <meshBasicMaterial map={bakedTex5} />
      </mesh>
      <mesh
        geometry={nodes.bake6.geometry}
        position={[-1.1789, 0.51015, -0.87188]}
      >
        <meshBasicMaterial map={bakedTex6} />
      </mesh>
      <mesh
        geometry={nodes.bake7.geometry}
        position={[1.62294, 1.49388, -0.73567]}
      >
        <meshBasicMaterial map={bakedTex7} />
      </mesh>
      <mesh
        geometry={nodes.bake8.geometry}
        position={[0.2235, 0.03134, -0.03501]}
      >
        <meshBasicMaterial map={bakedTex8} />
      </mesh>

      <OrbitControls camera={myCamera} ref={controls} />
    </group>
  );
}

useGLTF.preload('/beresford_design.glb');
