/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import model from '../../models/hero_model.glb';
import baked from '../../img/bakes/heroBake.jpg';
import { sRGBEncoding } from 'three';
import { gsap, Power1 } from 'gsap';

export default function Model(props) {
  const group = useRef();
  const letters = useRef();
  const airRock1 = useRef();
  const airRock2 = useRef();
  const airRock3 = useRef();
  const airRock4 = useRef();

  const bakedTex = useTexture(baked);

  bakedTex.flipY = false;
  bakedTex.encoding = sRGBEncoding;

  useEffect(() => {
    gsap.to(letters.current.position, {
      duration: 3,
      ease: Power1.easeInOut,
      y: 7.5,
      repeat: -1,
      yoyo: true,
    });

    gsap.to(airRock1.current.position, {
      duration: 2.8,
      ease: Power1.easeInOut,
      y: 3,
      repeat: -1,
      yoyo: true,
    });

    gsap.to(airRock2.current.position, {
      duration: 3,
      ease: Power1.easeInOut,
      y: 12,
      delay: 0.25,
      repeat: -1,
      yoyo: true,
    });

    gsap.to(airRock3.current.position, {
      duration: 2.4,
      ease: Power1.easeInOut,
      y: 8,
      delay: 0.5,
      repeat: -1,
      yoyo: true,
    });

    gsap.to(airRock4.current.position, {
      duration: 3.25,
      ease: Power1.easeInOut,
      y: 4,
      repeat: -1,
      yoyo: true,
    });
  }, []);

  const { nodes } = useGLTF(model);

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.letters.geometry}
        ref={letters}
        position={[0.05574, 6.93339, -0.00698]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.air_rock001.geometry}
        ref={airRock1}
        position={[-3.14247, 1.59546, 3.03652]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.air_rock002.geometry}
        ref={airRock2}
        position={[-2.40939, 11.24023, -2.64953]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.air_rock003.geometry}
        ref={airRock3}
        position={[3.94263, 7.24577, -2.62799]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.air_rock.geometry}
        ref={airRock4}
        position={[3.15335, 3.2013, 2.33815]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.ground_rocks.geometry}
        position={[1.75483, 6.44803, -11.96148]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.platform.geometry}
        position={[-0.03233, -1.16806, -1.12225]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.rim.geometry}
        position={[-0.03233, -1.16806, -1.12225]}
      >
        <meshBasicMaterial map={bakedTex} />
      </mesh>
      <mesh
        geometry={nodes.emissive.geometry}
        position={[0.1339, -0.70538, -0.28658]}
        scale={[1.1, 1, 1.1]}
      >
        <meshBasicMaterial color={'white'} />
      </mesh>
    </group>
  );
}

useGLTF.preload(model);
